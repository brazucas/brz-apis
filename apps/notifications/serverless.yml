app: notifications
plugins:
  - serverless-dotenv-plugin
  - serverless-domain-manager
  - serverless-offline

custom:
  customDomain:
    domainName: ${env:SLS_DOMAIN_NAME}
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
    certificateName: ${env:SLS_DOMAIN_NAME}
  resourcePolicies:
    dev:
      - Effect: Allow
        Principal: "*"
        Action: execute-api:Invoke
        Resource:
          - execute-api:/*/*/*
        Condition:
          IpAddress:
            aws:SourceIp:
              "Fn::Split":
                - ","
                - ${env:SLS_IP_ALLOWLIST}

service: notifications
useDotenv: true
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  memorySize: 128
  apiGateway:
    resourcePolicy: ${self:custom.resourcePolicies.${opt:stage, self:provider.stage}}
  iam:
    role: ${env:SLS_LAMBDA_ROLE}
  vpc:
    securityGroupIds:
      "Fn::Split":
        - ","
        - ${env:SLS_VPC_SG_ID}
    subnetIds:
      "Fn::Split":
          - ","
          - ${env:SLS_VPC_SUBNET_ID}
package:
  excludeDevDependencies: true
  patterns:
    - dist/**
    - package.json
    - package-lock.lock
    - '!.cicd/**'
    - '!src/**'
    - '!test/**'
functions:
  app:
    handler: dist/lambda.handler
    events:
     - http:
         path: /
         method: ANY
     - http:
         method: any
         path: /{any+}